// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication2.Models;

#nullable disable

namespace WebApplication2.Migrations
{
    [DbContext(typeof(DoanmonhocContext))]
    partial class DoanmonhocContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("UserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens");
                });

            modelBuilder.Entity("WebApplication2.Models.AppUserModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WebApplication2.Models.BaoHanh", b =>
                {
                    b.Property<int>("IdBaohanh")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_baohanh");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdBaohanh"));

                    b.Property<int?>("IdHoadon")
                        .HasColumnType("int")
                        .HasColumnName("id_hoadon");

                    b.Property<int?>("IdSanpham")
                        .HasColumnType("int")
                        .HasColumnName("id_sanpham");

                    b.Property<DateTime?>("NgayHetHan")
                        .HasColumnType("date");

                    b.Property<DateTime?>("NgayMua")
                        .HasColumnType("date");

                    b.Property<string>("TenKhachHang")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ThoiHanBaoHanh")
                        .HasColumnType("int");

                    b.HasKey("IdBaohanh");

                    b.HasIndex("IdHoadon");

                    b.HasIndex("IdSanpham");

                    b.ToTable("BaoHanh", (string)null);
                });

            modelBuilder.Entity("WebApplication2.Models.ChiTietHoaDon", b =>
                {
                    b.Property<int>("IdChitiethoadon")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_chitiethoadon");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdChitiethoadon"));

                    b.Property<decimal?>("Dongia")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int?>("IdHoadon")
                        .HasColumnType("int")
                        .HasColumnName("id_hoadon");

                    b.Property<int?>("IdSanpham")
                        .HasColumnType("int")
                        .HasColumnName("id_sanpham");

                    b.Property<int?>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("IdChitiethoadon");

                    b.HasIndex("IdHoadon");

                    b.HasIndex("IdSanpham");

                    b.ToTable("ChiTietHoaDon", (string)null);
                });

            modelBuilder.Entity("WebApplication2.Models.ChiTietPhieuNhap", b =>
                {
                    b.Property<int>("IdChitietphieunhap")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_chitietphieunhap");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdChitietphieunhap"));

                    b.Property<int?>("DonGia")
                        .HasColumnType("int");

                    b.Property<int?>("IdPhieunhap")
                        .HasColumnType("int")
                        .HasColumnName("id_phieunhap");

                    b.Property<int?>("MaSp")
                        .HasColumnType("int")
                        .HasColumnName("MaSP");

                    b.Property<int?>("SoLuong")
                        .HasColumnType("int");

                    b.Property<int?>("ThanhTien")
                        .HasColumnType("int");

                    b.Property<int?>("ThueNhap")
                        .HasColumnType("int");

                    b.HasKey("IdChitietphieunhap");

                    b.HasIndex("IdPhieunhap");

                    b.HasIndex("MaSp");

                    b.ToTable("ChiTietPhieuNhap", (string)null);
                });

            modelBuilder.Entity("WebApplication2.Models.ChiTietPhieuXuat", b =>
                {
                    b.Property<int>("IdChitietphieuxuat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_chitietphieuxuat");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdChitietphieuxuat"));

                    b.Property<int?>("DonGia")
                        .HasColumnType("int")
                        .HasColumnName("DonGIa");

                    b.Property<int?>("IdPhieuxuat")
                        .HasColumnType("int")
                        .HasColumnName("id_phieuxuat");

                    b.Property<int?>("MaSp")
                        .HasColumnType("int")
                        .HasColumnName("MaSP");

                    b.Property<int?>("Soluong")
                        .HasColumnType("int");

                    b.Property<int?>("ThanhTien")
                        .HasColumnType("int");

                    b.Property<int?>("ThueXuat")
                        .HasColumnType("int");

                    b.HasKey("IdChitietphieuxuat");

                    b.HasIndex("IdPhieuxuat");

                    b.HasIndex("MaSp");

                    b.ToTable("ChiTietPhieuXuat", (string)null);
                });

            modelBuilder.Entity("WebApplication2.Models.DanhMucSanPham", b =>
                {
                    b.Property<int>("IdDanhmuc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_danhmuc");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDanhmuc"));

                    b.Property<string>("Tendanhmuc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("tendanhmuc");

                    b.HasKey("IdDanhmuc")
                        .HasName("PK_DanhMuc_1");

                    b.ToTable("DanhMucSanPham", (string)null);
                });

            modelBuilder.Entity("WebApplication2.Models.DonViTinh", b =>
                {
                    b.Property<int>("IdDvt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_DVT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDvt"));

                    b.Property<bool?>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("active");

                    b.Property<string>("TenDvt")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TenDVT");

                    b.HasKey("IdDvt");

                    b.ToTable("DonViTinh", (string)null);
                });

            modelBuilder.Entity("WebApplication2.Models.GioHang", b =>
                {
                    b.Property<int>("IdGiohang")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_giohang");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdGiohang"));

                    b.Property<int?>("IdNguoidung")
                        .HasColumnType("int")
                        .HasColumnName("id_nguoidung");

                    b.Property<int?>("IdSanpham")
                        .HasColumnType("int")
                        .HasColumnName("id_sanpham");

                    b.Property<int?>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("IdGiohang");

                    b.HasIndex("IdNguoidung");

                    b.ToTable("GioHang", (string)null);
                });

            modelBuilder.Entity("WebApplication2.Models.HangSx", b =>
                {
                    b.Property<int>("IdHangsx")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_hangsx");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdHangsx"));

                    b.Property<bool?>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("active");

                    b.Property<string>("Tenhangsanxuat")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("tenhangsanxuat");

                    b.HasKey("IdHangsx")
                        .HasName("PK_NuocSX");

                    b.ToTable("HangSX", (string)null);
                });

            modelBuilder.Entity("WebApplication2.Models.HoaDon", b =>
                {
                    b.Property<int>("IdHoadon")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_hoadon");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdHoadon"));

                    b.Property<int?>("IdNguoidung")
                        .HasColumnType("int")
                        .HasColumnName("id_nguoidung");

                    b.Property<DateTime?>("NgayMua")
                        .HasColumnType("date");

                    b.Property<decimal?>("TongTien")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("Trangthai")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("trangthai");

                    b.HasKey("IdHoadon");

                    b.HasIndex("IdNguoidung");

                    b.ToTable("HoaDon", (string)null);
                });

            modelBuilder.Entity("WebApplication2.Models.KhachHang", b =>
                {
                    b.Property<int>("MaKh")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MaKH");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaKh"));

                    b.Property<string>("DiaChi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("DIaChi");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Sodienthoai")
                        .HasColumnType("int");

                    b.Property<string>("TenKh")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TenKH");

                    b.HasKey("MaKh");

                    b.ToTable("KhachHang", (string)null);
                });

            modelBuilder.Entity("WebApplication2.Models.KhuyenMai", b =>
                {
                    b.Property<int>("IdKhuyenmai")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_khuyenmai");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdKhuyenmai"));

                    b.Property<string>("TenKhuyenMai")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("TiLe")
                        .HasColumnType("float");

                    b.HasKey("IdKhuyenmai");

                    b.ToTable("KhuyenMai", (string)null);
                });

            modelBuilder.Entity("WebApplication2.Models.Login", b =>
                {
                    b.Property<int>("IdDangnhap")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_dangnhap");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDangnhap"));

                    b.Property<string>("DiaChi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("HoTen")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MatKhau")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Quyen")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Sdt")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("SDT")
                        .IsFixedLength();

                    b.Property<string>("TenDangnhap")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdDangnhap");

                    b.ToTable("Login", (string)null);
                });

            modelBuilder.Entity("WebApplication2.Models.NguoiDung", b =>
                {
                    b.Property<int>("IdNguoidung")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_nguoidung");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdNguoidung"));

                    b.Property<string>("DiaChi")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Hoten")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("IdDangnhap")
                        .HasColumnType("int")
                        .HasColumnName("id_dangnhap");

                    b.Property<string>("SoDienThoai")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .IsFixedLength();

                    b.HasKey("IdNguoidung")
                        .HasName("PK__NguoiDun__2725D724BED4A25D");

                    b.HasIndex("IdDangnhap");

                    b.ToTable("NguoiDung", (string)null);
                });

            modelBuilder.Entity("WebApplication2.Models.NguoiDungPhanQuyen", b =>
                {
                    b.Property<int>("IdNguoidung")
                        .HasColumnType("int")
                        .HasColumnName("id_nguoidung");

                    b.Property<int>("IdPhanquyen")
                        .HasColumnType("int")
                        .HasColumnName("id_phanquyen");

                    b.HasKey("IdNguoidung");

                    b.HasIndex("IdPhanquyen");

                    b.ToTable("NguoiDung_PhanQuyen", (string)null);
                });

            modelBuilder.Entity("WebApplication2.Models.NhaCungCap", b =>
                {
                    b.Property<int>("MaNcc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MaNCC");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaNcc"));

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .IsFixedLength();

                    b.Property<string>("TenNcc")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TenNCC");

                    b.HasKey("MaNcc")
                        .HasName("PK__NhaCungC__3A185DEB048EAAFD");

                    b.ToTable("NhaCungCap", (string)null);
                });

            modelBuilder.Entity("WebApplication2.Models.OrderDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("OrderCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("sanPhamMaSp")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("sanPhamMaSp");

                    b.ToTable("OrderDetail");
                });

            modelBuilder.Entity("WebApplication2.Models.OrderModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("WebApplication2.Models.PhanQuyen", b =>
                {
                    b.Property<int>("IdPhanquyen")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_phanquyen");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPhanquyen"));

                    b.Property<string>("TenQuyen")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdPhanquyen");

                    b.ToTable("PhanQuyen", (string)null);
                });

            modelBuilder.Entity("WebApplication2.Models.PhienBan", b =>
                {
                    b.Property<int>("IdPhienban")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_phienban");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPhienban"));

                    b.Property<bool?>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("active");

                    b.Property<string>("TenPhienBan")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdPhienban");

                    b.ToTable("PhienBan", (string)null);
                });

            modelBuilder.Entity("WebApplication2.Models.PhieuNhap", b =>
                {
                    b.Property<int>("IdPhieunhap")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_phieunhap");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPhieunhap"));

                    b.Property<int>("IdNguoidung")
                        .HasColumnType("int")
                        .HasColumnName("id_nguoidung");

                    b.Property<int?>("MaNcc")
                        .HasColumnType("int")
                        .HasColumnName("MaNCC");

                    b.Property<string>("MaPN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayNhap")
                        .HasColumnType("date");

                    b.Property<int?>("SoPhieuNhap")
                        .HasColumnType("int");

                    b.Property<int?>("TongTien")
                        .HasColumnType("int");

                    b.HasKey("IdPhieunhap")
                        .HasName("PK__BanNhapH__3521469EA500629A");

                    b.HasIndex("IdNguoidung");

                    b.HasIndex("MaNcc");

                    b.ToTable("PhieuNhap", (string)null);
                });

            modelBuilder.Entity("WebApplication2.Models.PhieuXuat", b =>
                {
                    b.Property<int>("IdPhieuxuat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_phieuxuat");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPhieuxuat"));

                    b.Property<int?>("IdKhuyenmai")
                        .HasColumnType("int")
                        .HasColumnName("id_khuyenmai");

                    b.Property<int?>("IdNguoidung")
                        .HasColumnType("int")
                        .HasColumnName("id_nguoidung");

                    b.Property<int?>("MaKh")
                        .HasColumnType("int")
                        .HasColumnName("MaKH");

                    b.Property<DateTime>("NgayXuat")
                        .HasColumnType("date");

                    b.Property<int>("SoPhieuXuat")
                        .HasColumnType("int");

                    b.Property<int?>("TongTien")
                        .HasColumnType("int");

                    b.HasKey("IdPhieuxuat")
                        .HasName("PK__BanXuatH__35202A7F8D39B856");

                    b.HasIndex("IdKhuyenmai");

                    b.HasIndex("IdNguoidung");

                    b.HasIndex("MaKh");

                    b.ToTable("PhieuXuat", (string)null);
                });

            modelBuilder.Entity("WebApplication2.Models.SanPham", b =>
                {
                    b.Property<int>("MaSp")
                        .HasColumnType("int")
                        .HasColumnName("MaSP");

                    b.Property<int?>("Gia")
                        .HasColumnType("int");

                    b.Property<int?>("IdDanhmuc")
                        .HasColumnType("int")
                        .HasColumnName("id_danhmuc");

                    b.Property<int?>("IdDvt")
                        .HasColumnType("int")
                        .HasColumnName("id_DVT");

                    b.Property<int?>("IdHangsx")
                        .HasColumnType("int")
                        .HasColumnName("id_hangsx");

                    b.Property<int?>("IdPhienban")
                        .HasColumnType("int")
                        .HasColumnName("id_phienban");

                    b.Property<int?>("IdThoigianbaohanh")
                        .HasColumnType("int")
                        .HasColumnName("id_thoigianbaohanh");

                    b.Property<string>("Imageurl")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("imageurl");

                    b.Property<string>("TenSp")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TenSP");

                    b.HasKey("MaSp")
                        .HasName("PK__SanPham__2725081C692E7911");

                    b.HasIndex("IdDanhmuc");

                    b.HasIndex("IdDvt");

                    b.HasIndex("IdHangsx");

                    b.HasIndex("IdPhienban");

                    b.HasIndex("IdThoigianbaohanh");

                    b.ToTable("SanPham", (string)null);
                });

            modelBuilder.Entity("WebApplication2.Models.ThanhToan", b =>
                {
                    b.Property<int>("IdThanhtoan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_thanhtoan");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdThanhtoan"));

                    b.Property<int?>("IdHoadon")
                        .HasColumnType("int")
                        .HasColumnName("id_hoadon");

                    b.Property<DateTime?>("NgayMua")
                        .HasColumnType("date");

                    b.Property<string>("PhuongThuc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("TongTien")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("TrangThai")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("TransactionId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdThanhtoan");

                    b.HasIndex("IdHoadon");

                    b.ToTable("ThanhToan", (string)null);
                });

            modelBuilder.Entity("WebApplication2.Models.ThoiGianBaoHanh", b =>
                {
                    b.Property<int>("IdTgbh")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_TGBH");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTgbh"));

                    b.Property<string>("ThoiGian")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdTgbh");

                    b.ToTable("ThoiGianBaoHanh", (string)null);
                });

            modelBuilder.Entity("WebApplication2.Models.TonKho", b =>
                {
                    b.Property<int>("IdTonkho")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_tonkho");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTonkho"));

                    b.Property<int?>("GiaNhap")
                        .HasColumnType("int");

                    b.Property<int?>("IdChitietphieunhap")
                        .HasColumnType("int")
                        .HasColumnName("id_chitietphieunhap");

                    b.Property<int?>("IdChitietphieuxuat")
                        .HasColumnType("int")
                        .HasColumnName("id_chitietphieuxuat");

                    b.Property<int?>("MaSp")
                        .HasColumnType("int");

                    b.Property<int?>("SoLuongTon")
                        .HasColumnType("int");

                    b.HasKey("IdTonkho");

                    b.HasIndex("IdChitietphieunhap");

                    b.HasIndex("MaSp");

                    b.ToTable("TonKho", (string)null);
                });

            modelBuilder.Entity("WebApplication2.Models.BaoHanh", b =>
                {
                    b.HasOne("WebApplication2.Models.HoaDon", "IdHoadonNavigation")
                        .WithMany("BaoHanhs")
                        .HasForeignKey("IdHoadon")
                        .HasConstraintName("FK_BaoHanh_HoaDon");

                    b.HasOne("WebApplication2.Models.SanPham", "IdSanphamNavigation")
                        .WithMany("BaoHanhs")
                        .HasForeignKey("IdSanpham")
                        .HasConstraintName("FK_BaoHanh_SanPham");

                    b.Navigation("IdHoadonNavigation");

                    b.Navigation("IdSanphamNavigation");
                });

            modelBuilder.Entity("WebApplication2.Models.ChiTietHoaDon", b =>
                {
                    b.HasOne("WebApplication2.Models.HoaDon", "IdHoadonNavigation")
                        .WithMany("ChiTietHoaDons")
                        .HasForeignKey("IdHoadon")
                        .HasConstraintName("FK_ChiTietHoaDon_HoaDon");

                    b.HasOne("WebApplication2.Models.SanPham", "IdSanphamNavigation")
                        .WithMany("ChiTietHoaDons")
                        .HasForeignKey("IdSanpham")
                        .HasConstraintName("FK_ChiTietHoaDon_SanPham");

                    b.Navigation("IdHoadonNavigation");

                    b.Navigation("IdSanphamNavigation");
                });

            modelBuilder.Entity("WebApplication2.Models.ChiTietPhieuNhap", b =>
                {
                    b.HasOne("WebApplication2.Models.PhieuNhap", "IdPhieunhapNavigation")
                        .WithMany("ChiTietPhieuNhaps")
                        .HasForeignKey("IdPhieunhap")
                        .HasConstraintName("FK_ChiTietPhieuNhap_PhieuNhap");

                    b.HasOne("WebApplication2.Models.SanPham", "MaSpNavigation")
                        .WithMany("ChiTietPhieuNhaps")
                        .HasForeignKey("MaSp")
                        .HasConstraintName("FK_ChiTietPhieuNhap_SanPham1");

                    b.Navigation("IdPhieunhapNavigation");

                    b.Navigation("MaSpNavigation");
                });

            modelBuilder.Entity("WebApplication2.Models.ChiTietPhieuXuat", b =>
                {
                    b.HasOne("WebApplication2.Models.PhieuXuat", "IdPhieuxuatNavigation")
                        .WithMany("ChiTietPhieuXuats")
                        .HasForeignKey("IdPhieuxuat")
                        .HasConstraintName("FK_ChiTietPhieuXuat_PhieuXuat2");

                    b.HasOne("WebApplication2.Models.SanPham", "MaSpNavigation")
                        .WithMany("ChiTietPhieuXuats")
                        .HasForeignKey("MaSp")
                        .HasConstraintName("FK_ChiTietPhieuXuat_SanPham");

                    b.Navigation("IdPhieuxuatNavigation");

                    b.Navigation("MaSpNavigation");
                });

            modelBuilder.Entity("WebApplication2.Models.GioHang", b =>
                {
                    b.HasOne("WebApplication2.Models.NguoiDung", "IdNguoidungNavigation")
                        .WithMany("GioHangs")
                        .HasForeignKey("IdNguoidung")
                        .HasConstraintName("FK_GioHang_NguoiDung");

                    b.Navigation("IdNguoidungNavigation");
                });

            modelBuilder.Entity("WebApplication2.Models.HoaDon", b =>
                {
                    b.HasOne("WebApplication2.Models.NguoiDung", "IdNguoidungNavigation")
                        .WithMany("HoaDons")
                        .HasForeignKey("IdNguoidung")
                        .HasConstraintName("FK_HoaDon_NguoiDung");

                    b.Navigation("IdNguoidungNavigation");
                });

            modelBuilder.Entity("WebApplication2.Models.NguoiDung", b =>
                {
                    b.HasOne("WebApplication2.Models.Login", "IdDangnhapNavigation")
                        .WithMany("NguoiDungs")
                        .HasForeignKey("IdDangnhap")
                        .HasConstraintName("FK_NguoiDung_Login");

                    b.Navigation("IdDangnhapNavigation");
                });

            modelBuilder.Entity("WebApplication2.Models.NguoiDungPhanQuyen", b =>
                {
                    b.HasOne("WebApplication2.Models.NguoiDung", "IdNguoidungNavigation")
                        .WithOne("NguoiDungPhanQuyen")
                        .HasForeignKey("WebApplication2.Models.NguoiDungPhanQuyen", "IdNguoidung")
                        .IsRequired()
                        .HasConstraintName("FK_NguoiDung_PhanQuyen_NguoiDung");

                    b.HasOne("WebApplication2.Models.PhanQuyen", "IdPhanquyenNavigation")
                        .WithMany("NguoiDungPhanQuyens")
                        .HasForeignKey("IdPhanquyen")
                        .IsRequired()
                        .HasConstraintName("FK_NguoiDung_PhanQuyen_PhanQuyen");

                    b.Navigation("IdNguoidungNavigation");

                    b.Navigation("IdPhanquyenNavigation");
                });

            modelBuilder.Entity("WebApplication2.Models.OrderDetails", b =>
                {
                    b.HasOne("WebApplication2.Models.OrderModel", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication2.Models.SanPham", "sanPham")
                        .WithMany()
                        .HasForeignKey("sanPhamMaSp")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("sanPham");
                });

            modelBuilder.Entity("WebApplication2.Models.PhieuNhap", b =>
                {
                    b.HasOne("WebApplication2.Models.NguoiDung", "IdNguoidungNavigation")
                        .WithMany("PhieuNhaps")
                        .HasForeignKey("IdNguoidung")
                        .IsRequired()
                        .HasConstraintName("FK_BanNhapHang_NguoiDung");

                    b.HasOne("WebApplication2.Models.NhaCungCap", "MaNccNavigation")
                        .WithMany("PhieuNhaps")
                        .HasForeignKey("MaNcc")
                        .HasConstraintName("FK_PhieuNhap_NhaCungCap");

                    b.Navigation("IdNguoidungNavigation");

                    b.Navigation("MaNccNavigation");
                });

            modelBuilder.Entity("WebApplication2.Models.PhieuXuat", b =>
                {
                    b.HasOne("WebApplication2.Models.KhuyenMai", "IdKhuyenmaiNavigation")
                        .WithMany("PhieuXuats")
                        .HasForeignKey("IdKhuyenmai")
                        .HasConstraintName("FK_PhieuXuat_KhuyenMai");

                    b.HasOne("WebApplication2.Models.NguoiDung", "IdNguoidungNavigation")
                        .WithMany("PhieuXuats")
                        .HasForeignKey("IdNguoidung")
                        .HasConstraintName("FK_PhieuXuat_NhanVien");

                    b.HasOne("WebApplication2.Models.KhachHang", "MaKhNavigation")
                        .WithMany("PhieuXuats")
                        .HasForeignKey("MaKh")
                        .HasConstraintName("FK_PhieuXuat_KhachHang");

                    b.Navigation("IdKhuyenmaiNavigation");

                    b.Navigation("IdNguoidungNavigation");

                    b.Navigation("MaKhNavigation");
                });

            modelBuilder.Entity("WebApplication2.Models.SanPham", b =>
                {
                    b.HasOne("WebApplication2.Models.DanhMucSanPham", "IdDanhmucNavigation")
                        .WithMany("SanPhams")
                        .HasForeignKey("IdDanhmuc")
                        .HasConstraintName("FK_SanPham_DanhMuc");

                    b.HasOne("WebApplication2.Models.DonViTinh", "IdDvtNavigation")
                        .WithMany("SanPhams")
                        .HasForeignKey("IdDvt")
                        .HasConstraintName("FK_SanPham_DonViTinh");

                    b.HasOne("WebApplication2.Models.HangSx", "IdHangsxNavigation")
                        .WithMany("SanPhams")
                        .HasForeignKey("IdHangsx")
                        .HasConstraintName("FK_SanPham_NuocSX");

                    b.HasOne("WebApplication2.Models.PhienBan", "IdPhienbanNavigation")
                        .WithMany("SanPhams")
                        .HasForeignKey("IdPhienban")
                        .HasConstraintName("FK_SanPham_PhienBan");

                    b.HasOne("WebApplication2.Models.ThoiGianBaoHanh", "IdThoigianbaohanhNavigation")
                        .WithMany("SanPhams")
                        .HasForeignKey("IdThoigianbaohanh")
                        .HasConstraintName("FK_SanPham_ThoiGianBaoHanh");

                    b.Navigation("IdDanhmucNavigation");

                    b.Navigation("IdDvtNavigation");

                    b.Navigation("IdHangsxNavigation");

                    b.Navigation("IdPhienbanNavigation");

                    b.Navigation("IdThoigianbaohanhNavigation");
                });

            modelBuilder.Entity("WebApplication2.Models.ThanhToan", b =>
                {
                    b.HasOne("WebApplication2.Models.HoaDon", "IdHoadonNavigation")
                        .WithMany("ThanhToans")
                        .HasForeignKey("IdHoadon")
                        .HasConstraintName("FK_ThanhToan_HoaDon");

                    b.Navigation("IdHoadonNavigation");
                });

            modelBuilder.Entity("WebApplication2.Models.TonKho", b =>
                {
                    b.HasOne("WebApplication2.Models.ChiTietPhieuNhap", "IdChitietphieunhapNavigation")
                        .WithMany("TonKhos")
                        .HasForeignKey("IdChitietphieunhap")
                        .HasConstraintName("FK_TonKho_ChiTietPhieuNhap");

                    b.HasOne("WebApplication2.Models.SanPham", "MaSpNavigation")
                        .WithMany("TonKhos")
                        .HasForeignKey("MaSp")
                        .HasConstraintName("FK_TonKho_SanPham");

                    b.Navigation("IdChitietphieunhapNavigation");

                    b.Navigation("MaSpNavigation");
                });

            modelBuilder.Entity("WebApplication2.Models.ChiTietPhieuNhap", b =>
                {
                    b.Navigation("TonKhos");
                });

            modelBuilder.Entity("WebApplication2.Models.DanhMucSanPham", b =>
                {
                    b.Navigation("SanPhams");
                });

            modelBuilder.Entity("WebApplication2.Models.DonViTinh", b =>
                {
                    b.Navigation("SanPhams");
                });

            modelBuilder.Entity("WebApplication2.Models.HangSx", b =>
                {
                    b.Navigation("SanPhams");
                });

            modelBuilder.Entity("WebApplication2.Models.HoaDon", b =>
                {
                    b.Navigation("BaoHanhs");

                    b.Navigation("ChiTietHoaDons");

                    b.Navigation("ThanhToans");
                });

            modelBuilder.Entity("WebApplication2.Models.KhachHang", b =>
                {
                    b.Navigation("PhieuXuats");
                });

            modelBuilder.Entity("WebApplication2.Models.KhuyenMai", b =>
                {
                    b.Navigation("PhieuXuats");
                });

            modelBuilder.Entity("WebApplication2.Models.Login", b =>
                {
                    b.Navigation("NguoiDungs");
                });

            modelBuilder.Entity("WebApplication2.Models.NguoiDung", b =>
                {
                    b.Navigation("GioHangs");

                    b.Navigation("HoaDons");

                    b.Navigation("NguoiDungPhanQuyen");

                    b.Navigation("PhieuNhaps");

                    b.Navigation("PhieuXuats");
                });

            modelBuilder.Entity("WebApplication2.Models.NhaCungCap", b =>
                {
                    b.Navigation("PhieuNhaps");
                });

            modelBuilder.Entity("WebApplication2.Models.OrderModel", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("WebApplication2.Models.PhanQuyen", b =>
                {
                    b.Navigation("NguoiDungPhanQuyens");
                });

            modelBuilder.Entity("WebApplication2.Models.PhienBan", b =>
                {
                    b.Navigation("SanPhams");
                });

            modelBuilder.Entity("WebApplication2.Models.PhieuNhap", b =>
                {
                    b.Navigation("ChiTietPhieuNhaps");
                });

            modelBuilder.Entity("WebApplication2.Models.PhieuXuat", b =>
                {
                    b.Navigation("ChiTietPhieuXuats");
                });

            modelBuilder.Entity("WebApplication2.Models.SanPham", b =>
                {
                    b.Navigation("BaoHanhs");

                    b.Navigation("ChiTietHoaDons");

                    b.Navigation("ChiTietPhieuNhaps");

                    b.Navigation("ChiTietPhieuXuats");

                    b.Navigation("TonKhos");
                });

            modelBuilder.Entity("WebApplication2.Models.ThoiGianBaoHanh", b =>
                {
                    b.Navigation("SanPhams");
                });
#pragma warning restore 612, 618
        }
    }
}
